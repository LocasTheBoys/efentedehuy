-- Fungsi untuk menjalankan script 1
local function runScript1()
    wait(10)
    -- Konfigurasi Hologram Pathway
    local hologramColor = Color3.fromRGB(255, 255, 255) -- Warna biru
    local hologramTransparency = 0.5 -- Transparansi hologram (0 = opaque, 1 = transparan)

    -- Konfigurasi Summon Pet
    local petName = "Nightguard Afton" -- Nama pet yang akan disummon
    local summonCount = 10 -- Jumlah pet yang akan disummon 
    local summonRadiusX = 7 -- Radius acak X (mengatur area summon persegi panjang)
    local summonRadiusZ = 10 -- Radius acak Z (mengatur area summon persegi panjang)
    local summonDelay = 2 -- Jeda antar summon dalam detik
    local proximityToPath = 3 -- Jarak minimum dari pathways untuk posisi summon

    -- Konfigurasi Visual Indicator
    local indicatorColor = "Bright blue" -- Warna visual indicator
    local indicatorTransparency = 0.7 -- Transparansi visual indicator

    -- Path awal: Jalan Panjang Tengah
    local startPath1 = "3" -- Nama path pertama
    local startPath2 = "2" -- Nama path kedua

    -- Setup Hologram Pathways
    local pathwayFolder = game.Workspace.Map.Pathways

    for _, pathwayPart in ipairs(pathwayFolder:GetChildren()) do
        if pathwayPart:IsA("Part") then
            local hologram = pathwayPart:Clone()
            hologram.Name = pathwayPart.Name .. "_Hologram"
            hologram.CanCollide = false
            hologram.Transparency = hologramTransparency
            hologram.BrickColor = BrickColor.new(hologramColor)
            hologram.Position = pathwayPart.Position + Vector3.new(0, 0.1, 0)
            hologram.Parent = pathwayFolder
        end
    end

    -- Script summon pet
    wait(1)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local part1 = workspace.Map:WaitForChild("Paths"):WaitForChild(startPath1):WaitForChild(startPath2)
    local part2 = workspace.Map:WaitForChild("Paths"):WaitForChild(startPath1):WaitForChild("3")
    local middlePosition = (part1.Position + part2.Position) / 2
    character.HumanoidRootPart.CFrame = CFrame.new(middlePosition)

    local visualIndicator = Instance.new("Part")
    visualIndicator.Size = Vector3.new(summonRadiusX * 2, 0.1, summonRadiusZ * 2)
    visualIndicator.Anchored = true
    visualIndicator.CanCollide = false
    visualIndicator.BrickColor = BrickColor.new(indicatorColor)
    visualIndicator.Transparency = indicatorTransparency
    visualIndicator.Parent = workspace

    local function updateVisualIndicator()
        while true do
            visualIndicator.Position = character.HumanoidRootPart.Position + Vector3.new(0, -0.5, 0)
            wait(0.1)
        end
    end
    spawn(updateVisualIndicator)

    local usedPositions = {}

    local function isPositionUsed(position)
        for _, pos in pairs(usedPositions) do
            if (pos - position).magnitude < 3 then
                return true
            end
        end
        return false
    end

    -- Fungsi mengecek apakah posisi terlalu dekat dengan pathways
    local function isTooCloseToPath(position)
        for _, pathwayPart in ipairs(pathwayFolder:GetChildren()) do
            if pathwayPart:IsA("Part") then
                if (pathwayPart.Position - position).magnitude < proximityToPath then
                    return true
                end
            end
        end
        return false
    end

    -- Loop summon pet
    for i = 1, summonCount do
        local argsReset = { [1] = "Reset" }
        game:GetService("ReplicatedStorage").Remotes.Misc.StopSettings:FireServer(unpack(argsReset))

        for j = 1, 68 do
            game:GetService("ReplicatedStorage").Remotes.Misc.StopSettings:FireServer()
        end

        for attempt = 1, 100 do
            local randomX = math.random(-summonRadiusX, summonRadiusX)
            local randomZ = math.random(-summonRadiusZ, summonRadiusZ)
            local newPosition = character.HumanoidRootPart.Position + Vector3.new(randomX, 0, randomZ)

            if not isPositionUsed(newPosition) and not isTooCloseToPath(newPosition) then
                table.insert(usedPositions, newPosition)

                local argsSummon = {
                    [1] = petName,
                    [2] = CFrame.new(newPosition)
                }

                game:GetService("ReplicatedStorage").Remotes.Towers.SummonTower:FireServer(unpack(argsSummon))
                wait(summonDelay)
                break
            end
        end
    end

    -- Teleport ke koordinat akhir
    local part = workspace.Map:WaitForChild("Paths"):WaitForChild("3"):WaitForChild("2")
    character.HumanoidRootPart.CFrame = part.CFrame
end

-- Fungsi untuk menjalankan script 2
local function runScript2()
    wait(2) -- Jeda antara script 1 dan script 2
    local hologramColor = Color3.fromRGB(255, 165, 0) -- Warna orange menyala
    local hologramTransparency = 0.5 -- Transparansi setengah transparan

    local petName = "Funtime Freddy"
    local maxFreddyCount = 10  
    local summonRadius = 7
    local innerRadius = 5
    local summonDelay = 3
    local proximityToPath = 3
    local usedPositions = {}

    -- Membuat hologram pathway
    local pathwayFolder = game.Workspace.Map.Pathways
    for _, pathwayPart in ipairs(pathwayFolder:GetChildren()) do
        if pathwayPart:IsA("Part") then
            local hologram = pathwayPart:Clone()
            hologram.Name = pathwayPart.Name .. "_Hologram"
            hologram.CanCollide = false
            hologram.Transparency = hologramTransparency
            hologram.BrickColor = BrickColor.new(hologramColor)
            hologram.Position = pathwayPart.Position + Vector3.new(0, 0.1, 0)
            hologram.Parent = pathwayFolder
        end
    end

    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    local radiusIndicator = Instance.new("Part")
    radiusIndicator.Shape = Enum.PartType.Ball
    radiusIndicator.Size = Vector3.new(summonRadius * 2, 0.1, summonRadius * 2)
    radiusIndicator.Position = humanoidRootPart.Position + Vector3.new(0, -0.5, 0)
    radiusIndicator.Anchored = true
    radiusIndicator.CanCollide = false
    radiusIndicator.BrickColor = BrickColor.new("Bright blue")
    radiusIndicator.Transparency = 0.7
    radiusIndicator.Parent = workspace

    local function updateRadiusIndicator()
        while true do
            radiusIndicator.Position = humanoidRootPart.Position + Vector3.new(0, -0.5, 0)
            wait(0.1)
        end
    end
    spawn(updateRadiusIndicator)

    local function isTooCloseToPath(position)
        for _, path in ipairs(pathwayFolder:GetChildren()) do
            if (path.Position - position).magnitude < proximityToPath then
                return true
            end
        end
        return false
    end

    local function isPositionUsed(position)
        for _, pos in pairs(usedPositions) do
            if (pos - position).magnitude < 3 then
                return true
            end
        end
        return false
    end

    local function isWithinInnerRadius(position)
        return (position - humanoidRootPart.Position).magnitude < innerRadius
    end

    local currentFreddyCount = 0
    while currentFreddyCount < maxFreddyCount do
        local args = { [1] = "Reset" }
        game:GetService("ReplicatedStorage").Remotes.Misc.StopSettings:FireServer(unpack(args))
        
        for j = 1, 68 do
            game:GetService("ReplicatedStorage").Remotes.Misc.StopSettings:FireServer()
        end

        local attempts = 0
        local maxAttempts = 50
        local newPosition

        repeat
            local randomX = math.random(-summonRadius, summonRadius)
            local randomZ = math.random(-summonRadius, summonRadius)
            newPosition = humanoidRootPart.Position + Vector3.new(randomX, 0, randomZ)
            attempts = attempts + 1
        until not isPositionUsed(newPosition) and 
              not isTooCloseToPath(newPosition) and 
              not isWithinInnerRadius(newPosition) and 
              attempts < maxAttempts

        if attempts < maxAttempts then
            table.insert(usedPositions, newPosition)
            local args = {
                [1] = petName,
                [2] = CFrame.new(newPosition)
            }
            game:GetService("ReplicatedStorage").Remotes.Towers.SummonTower:FireServer(unpack(args))
            currentFreddyCount = currentFreddyCount + 1
            wait(summonDelay)
        else
            warn("Gagal menemukan posisi yang valid untuk Funtime Freddy setelah beberapa percobaan.")
        end
    end
end

-- Fungsi untuk menjalankan script 3
local function runScript3()
    wait(2) -- Jeda antara script 2 dan script 3
    -- Melanjutkan logika lain di sini sesuai dengan kebutuhan
end

-- Menjalankan semua skrip secara berurutan
runScript1()
runScript2()
runScript3()
